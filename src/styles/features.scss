// âœ… _features.scss (was features.scss)
$color2: rgb(255, 255, 255);
$color3: rgb(51, 51, 51);
$color4: #e7e7e7;

$text1: "Quicksand", sans-serif;
$shadow: 0 0 10px rgba(0, 0, 0, 0.3);

@mixin defaultStyle {
  width: 100%;
  height: 100vh;
  overflow-y: auto;
  background-color: $color4;
}

@mixin styledText(
  $size: 1.2rem,
  $weight: 400,
  $case: uppercase,
  $color: $color3,
  $spacing: 2px
) {
  font-size: $size;
  text-transform: $case;
  font-weight: $weight;
  letter-spacing: $spacing;
  color: $color;
}

@mixin flexBox(
  $direction: row,
  $alignItems: center,
  $justifyContent: flex-start,
  $spacing: 1rem
) {
  display: flex;
  flex-direction: $direction;
  align-items: $alignItems;
  justify-content: $justifyContent;
  gap: $spacing;
}

@mixin fill {
  width: 100%;
  height: 100%;
}

@mixin container($maxW: 1200px, $h: 100vh, $p: 5vmax, $m: auto) {
  margin: $m;
  max-width: $maxW;
  width: 100%;
  height: $h;
  padding: $p;
}

@mixin myButton($w: 10rem, $p: 0.5rem, $bgColor: $color3, $color: $color2) {
  width: $w;
  padding: calc($p * 1) calc($p * 3);
  background-color: $bgColor;
  border: 1px solid $bgColor;
  color: $color;
  text-transform: uppercase;
  transition: all 0.3s;
  cursor: pointer;
  &:hover {
    background-color: $color;
    color: $bgColor;
  }

  &:disabled {
    opacity: 0.2;
    cursor: not-allowed;
  }
}

@mixin hidescrollbar {
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin grid(
  $column: 1fr 2fr,
  $alignItems: center,
  $justifyContent: flex-start
) {
  display: grid;
  grid-template-columns: $column;
  align-items: $alignItems;
  justify-items: $justifyContent;
}

@mixin inputs {
  input {
    width: 100%;
    padding: 1rem;
    border: 1px solid $color4;
    font: 400 1rem $text1;
    background-color: $color2;
    outline: none;
  }
}

// Modern Design System Mixins

// Flexbox Layout
@mixin flex($direction: row, $align: center, $justify: flex-start, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
  @if $gap != 0 {
    gap: $gap;
  }
}

// Glass Effect
@mixin glass {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

// Neumorphic Shadow
@mixin neumorphic($type: "flat") {
  @if $type == "flat" {
    box-shadow: 
      5px 5px 10px rgba(0, 0, 0, 0.1),
      -5px -5px 10px rgba(255, 255, 255, 0.8);
  } @else if $type == "pressed" {
    box-shadow: 
      inset 2px 2px 5px rgba(0, 0, 0, 0.1),
      inset -2px -2px 5px rgba(255, 255, 255, 0.8);
  }
}

// Responsive Container
@mixin container($max-width: 1200px) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 1rem;
  
  @media (max-width: 768px) {
    padding: 0 0.5rem;
  }
}

// Interactive Element
@mixin interactive {
  cursor: pointer;
  transition: var(--transition);
  
  &:hover {
    transform: translateY(-1px);
  }
  
  &:active {
    transform: translateY(0);
  }
}

// Text Styles
@mixin text-style($size: 1rem, $weight: 400, $color: var(--text-primary)) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
  line-height: 1.6;
}

// Card Style
@mixin card {
  background: var(--card-bg);
  border-radius: var(--radius-md);
  padding: 1.5rem;
  box-shadow: var(--shadow-sm);
  transition: var(--transition);
  
  &:hover {
    box-shadow: var(--shadow-md);
  }
}

// Button Style
@mixin button($variant: "primary") {
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: var(--radius-sm);
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
  
  @if $variant == "primary" {
    background: var(--accent-color);
    color: white;
    
    &:hover {
      opacity: 0.9;
      transform: translateY(-1px);
    }
  } @else if $variant == "secondary" {
    background: transparent;
    border: 1px solid var(--accent-color);
    color: var(--accent-color);
    
    &:hover {
      background: var(--accent-color);
      color: white;
    }
  }
  
  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

// Input Style
@mixin input {
  width: 100%;
  padding: 0.75rem 1rem;
  border: none;
  border-radius: var(--radius-sm);
  background: rgba(255, 255, 255, 0.8);
  color: var(--text-primary);
  transition: var(--transition);
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--accent-color);
  }
  
  &::placeholder {
    color: var(--text-secondary);
  }
}



